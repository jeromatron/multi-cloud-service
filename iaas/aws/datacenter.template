{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Datastax template",
    "Parameters": {
        "CreateUser": {
            "Description": "Create User email",
            "Type": "String"
        },
        "Org": {
            "Description": "Org",
            "Type": "String"
        },
        "DeployerApp": {
            "Description": "Org",
            "Type": "String"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "DataCenterSize": {
            "Type": "Number",
            "Description": "Number of nodes in datacenter",
            "Default": "3"
        },
        "InstanceType": {
            "Description": "Node EC2 instance type",
            "Type": "String",
            "Default": "m4.large",
            "AllowedValues": [
              "c1.medium",
              "c1.xlarge",
              "cc2.8xlarge",
              "c3.large",
              "c3.xlarge",
              "c3.2xlarge",
              "c3.4xlarge",
              "c3.8xlarge",
              "c4.large",
              "c4.xlarge",
              "c4.2xlarge",
              "c4.4xlarge",
              "c4.8xlarge",
              "c5.large",
              "c5.xlarge",
              "c5.2xlarge",
              "c5.4xlarge",
              "c5.9xlarge",
              "c5.18xlarge",
              "d2.xlarge",
              "d2.2xlarge",
              "d2.4xlarge",
              "d2.8xlarge",
              "f1.2xlarge",
              "f1.16xlarge",
              "g3.4xlarge",
              "g3.8xlarge",
              "g3.16xlarge",
              "h1.2xlarge",
              "h1.4xlarge",
              "h1.8xlarge",
              "h1.16xlarge",
              "i2.xlarge",
              "i2.2xlarge",
              "i2.4xlarge",
              "i2.8xlarge",
              "i3.large",
              "i3.xlarge",
              "i3.2xlarge",
              "i3.4xlarge",
              "i3.8xlarge",
              "i3.16xlarge",
              "i3.metal",
              "m3.medium",
              "m3.large",
              "m3.xlarge",
              "m3.2xlarge",
               "m4.large",
               "m4.xlarge",
               "m4.2xlarge",
               "m4.4xlarge",
               "m4.10xlarge",
               "m4.16xlarge",
               "m5.large",
               "m5.xlarge",
               "m5.2xlarge",
               "m5.4xlarge",
               "m5.12xlarge",
               "m5.24xlarge",
               "p2.xlarge",
               "p2.8xlarge",
               "p2.16xlarge",
               "p3.2xlarge",
               "p3.8xlarge",
               "p3.16xlarge",
              "r3.xlarge",
              "r3.2xlarge",
              "r3.4xlarge",
              "r3.8xlarge",
              "r4.large",
              "r4.xlarge",
              "r4.2xlarge",
              "r4.4xlarge",
              "r4.8xlarge",
              "r4.16xlarge",
              "r5.large",
              "r5.xlarge",
              "r5.2xlarge",
              "r5.4xlarge",
              "r5.12xlarge",
              "r5.24xlarge",
               "t2.medium",
               "t2.large",
               "t2.xlarge",
               "t2.2xlarge",
              "x1e.xlarge",
              "x1e.2xlarge",
              "x1e.4xlarge",
              "x1e.8xlarge",
              "x1e.16xlarge",
              "x1e.32xlarge",
              "x1.16xlarge",
              "x1.32xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "VolumeSize": {
            "Type": "Number",
            "Description": "EBS volume size in GB",
            "Default": "60"
        },
        "SecurityCIDR": {
            "Description": "The IP address range covering node instances",
            "Type": "String",
            "Default": "0.0.0.0/0",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "AvailabilityZones": {
            "Type": "CommaDelimitedList",
            "Description": "List of AZs in VPC"
        },
        "VPC": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "VPC id"
        },
        "Subnets": {
            "Type": "CommaDelimitedList",
            "Description": "List of subnet ids to deploy nodes into"
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch": {
            "t1.micro": {
                "Arch": "PV64"
            },
            "t2.nano": {
                "Arch": "HVM64"
            },
            "t2.micro": {
                "Arch": "HVM64"
            },
            "t2.small": {
                "Arch": "HVM64"
            },
            "t2.medium": {
                "Arch": "HVM64"
            },
            "t2.large": {
                "Arch": "HVM64"
            },
            "m1.small": {
                "Arch": "PV64"
            },
            "m1.medium": {
                "Arch": "PV64"
            },
            "m1.large": {
                "Arch": "PV64"
            },
            "m1.xlarge": {
                "Arch": "PV64"
            },
            "m2.xlarge": {
                "Arch": "PV64"
            },
            "m2.2xlarge": {
                "Arch": "PV64"
            },
            "m2.4xlarge": {
                "Arch": "PV64"
            },
            "m3.medium": {
                "Arch": "HVM64"
            },
            "m3.large": {
                "Arch": "HVM64"
            },
            "m3.xlarge": {
                "Arch": "HVM64"
            },
            "m3.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.large": {
                "Arch": "HVM64"
            },
            "m4.xlarge": {
                "Arch": "HVM64"
            },
            "m4.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.4xlarge": {
                "Arch": "HVM64"
            },
            "m4.10xlarge": {
                "Arch": "HVM64"
            },
            "c1.medium": {
                "Arch": "PV64"
            },
            "c1.xlarge": {
                "Arch": "PV64"
            },
            "c3.large": {
                "Arch": "HVM64"
            },
            "c3.xlarge": {
                "Arch": "HVM64"
            },
            "c3.2xlarge": {
                "Arch": "HVM64"
            },
            "c3.4xlarge": {
                "Arch": "HVM64"
            },
            "c3.8xlarge": {
                "Arch": "HVM64"
            },
            "c4.large": {
                "Arch": "HVM64"
            },
            "c4.xlarge": {
                "Arch": "HVM64"
            },
            "c4.2xlarge": {
                "Arch": "HVM64"
            },
            "c4.4xlarge": {
                "Arch": "HVM64"
            },
            "c4.8xlarge": {
                "Arch": "HVM64"
            },
            "g2.2xlarge": {
                "Arch": "HVMG2"
            },
            "g2.8xlarge": {
                "Arch": "HVMG2"
            },
            "r3.large": {
                "Arch": "HVM64"
            },
            "r3.xlarge": {
                "Arch": "HVM64"
            },
            "r3.2xlarge": {
                "Arch": "HVM64"
            },
            "r3.4xlarge": {
                "Arch": "HVM64"
            },
            "r3.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.xlarge": {
                "Arch": "HVM64"
            },
            "i2.2xlarge": {
                "Arch": "HVM64"
            },
            "i2.4xlarge": {
                "Arch": "HVM64"
            },
            "i2.8xlarge": {
                "Arch": "HVM64"
            },
            "d2.xlarge": {
                "Arch": "HVM64"
            },
            "d2.2xlarge": {
                "Arch": "HVM64"
            },
            "d2.4xlarge": {
                "Arch": "HVM64"
            },
            "d2.8xlarge": {
                "Arch": "HVM64"
            },
            "hi1.4xlarge": {
                "Arch": "HVM64"
            },
            "hs1.8xlarge": {
                "Arch": "HVM64"
            },
            "cr1.8xlarge": {
                "Arch": "HVM64"
            },
            "cc2.8xlarge": {
                "Arch": "HVM64"
            }
        },
        "AWSInstanceType2NATArch": {
            "t1.micro": {
                "Arch": "NATPV64"
            },
            "t2.nano": {
                "Arch": "NATHVM64"
            },
            "t2.micro": {
                "Arch": "NATHVM64"
            },
            "t2.small": {
                "Arch": "NATHVM64"
            },
            "t2.medium": {
                "Arch": "NATHVM64"
            },
            "t2.large": {
                "Arch": "NATHVM64"
            },
            "m1.small": {
                "Arch": "NATPV64"
            },
            "m1.medium": {
                "Arch": "NATPV64"
            },
            "m1.large": {
                "Arch": "NATPV64"
            },
            "m1.xlarge": {
                "Arch": "NATPV64"
            },
            "m2.xlarge": {
                "Arch": "NATPV64"
            },
            "m2.2xlarge": {
                "Arch": "NATPV64"
            },
            "m2.4xlarge": {
                "Arch": "NATPV64"
            },
            "m3.medium": {
                "Arch": "NATHVM64"
            },
            "m3.large": {
                "Arch": "NATHVM64"
            },
            "m3.xlarge": {
                "Arch": "NATHVM64"
            },
            "m3.2xlarge": {
                "Arch": "NATHVM64"
            },
            "m4.large": {
                "Arch": "NATHVM64"
            },
            "m4.xlarge": {
                "Arch": "NATHVM64"
            },
            "m4.2xlarge": {
                "Arch": "NATHVM64"
            },
            "m4.4xlarge": {
                "Arch": "NATHVM64"
            },
            "m4.10xlarge": {
                "Arch": "NATHVM64"
            },
            "c1.medium": {
                "Arch": "NATPV64"
            },
            "c1.xlarge": {
                "Arch": "NATPV64"
            },
            "c3.large": {
                "Arch": "NATHVM64"
            },
            "c3.xlarge": {
                "Arch": "NATHVM64"
            },
            "c3.2xlarge": {
                "Arch": "NATHVM64"
            },
            "c3.4xlarge": {
                "Arch": "NATHVM64"
            },
            "c3.8xlarge": {
                "Arch": "NATHVM64"
            },
            "c4.large": {
                "Arch": "NATHVM64"
            },
            "c4.xlarge": {
                "Arch": "NATHVM64"
            },
            "c4.2xlarge": {
                "Arch": "NATHVM64"
            },
            "c4.4xlarge": {
                "Arch": "NATHVM64"
            },
            "c4.8xlarge": {
                "Arch": "NATHVM64"
            },
            "g2.2xlarge": {
                "Arch": "NATHVMG2"
            },
            "g2.8xlarge": {
                "Arch": "NATHVMG2"
            },
            "r3.large": {
                "Arch": "NATHVM64"
            },
            "r3.xlarge": {
                "Arch": "NATHVM64"
            },
            "r3.2xlarge": {
                "Arch": "NATHVM64"
            },
            "r3.4xlarge": {
                "Arch": "NATHVM64"
            },
            "r3.8xlarge": {
                "Arch": "NATHVM64"
            },
            "i2.xlarge": {
                "Arch": "NATHVM64"
            },
            "i2.2xlarge": {
                "Arch": "NATHVM64"
            },
            "i2.4xlarge": {
                "Arch": "NATHVM64"
            },
            "i2.8xlarge": {
                "Arch": "NATHVM64"
            },
            "d2.xlarge": {
                "Arch": "NATHVM64"
            },
            "d2.2xlarge": {
                "Arch": "NATHVM64"
            },
            "d2.4xlarge": {
                "Arch": "NATHVM64"
            },
            "d2.8xlarge": {
                "Arch": "NATHVM64"
            },
            "hi1.4xlarge": {
                "Arch": "NATHVM64"
            },
            "hs1.8xlarge": {
                "Arch": "NATHVM64"
            },
            "cr1.8xlarge": {
                "Arch": "NATHVM64"
            },
            "cc2.8xlarge": {
                "Arch": "NATHVM64"
            }
        },
        "AWSAMIRegionMap": {
            "AMI": {
                "US1604HVM": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20180405"
            },
            "ap-southeast-2": {
                "US1604HVM": "ami-2b12dc49"
            },
            "eu-central-1": {
                "US1604HVM": "ami-cd491726"
            },
            "eu-west-1": {
                "US1604HVM": "ami-74e6b80d"
            },
            "us-east-1": {
                "US1604HVM": "ami-6dfe5010"
            },
            "us-east-2": {
                "US1604HVM": "ami-e82a1a8d"
            },
            "us-west-2": {
                "US1604HVM": "ami-ca89eeb2"
            },
            "us-west-1": {
                "US1604HVM": "ami-0c1b880a476bb7b40"
            },
            "ap-northeast-1": {
                "US1604HVM": "ami-06c2c6531369e794f"
            },
            "ap-east-1": {
                "US1604HVM": "ami-9ca0d8ed"
            },
            "ap-south-1": {
                "US1604HVM": "ami-0c23ecb4ef5e8ef9a"
            },
            "ap-southeast-1": {
                "US1604HVM": "ami-042d26cf3ef92e026"
            },
            "ca-central-1": {
                "US1604HVM": "ami-0993e41d681c8f1fd"
            },
            "eu-north-1": {
                "US1604HVM": "ami-cb058db5"
            },
            "sa-east-1": {
                "US1604HVM": "ami-0be3df9b8bb0a5f23"
            },
            "us-gov-west-1": {
                "US1604HVM": "ami-23fa8242"
            },
            "us-gov-east-1": {
                "US1604HVM": "ami-7fc2230e"
            },
            "ap-northeast-2": {
                "US1604HVM": "ami-030b841cf36fd3728"
            },
            "eu-west-2": {
                "US1604HVM": "ami-0d7b406d323c92daa"
            },
            "ap-northeast-3": {
                "US1604HVM": "ami-00fa1d7017fe42b3b"
            },
            "eu-west-3": {
                "US1604HVM": "ami-081ed14fbc4fdc308"
            }
        }
    },
    "Resources": {
        "CassandraGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": {
                    "Ref": "AvailabilityZones"
                },
                "LaunchConfigurationName": {
                    "Ref": "CassandraLaunchConfig"
                },
                "MinSize": {
                    "Ref": "DataCenterSize"
                },
                "MaxSize": {
                    "Ref": "DataCenterSize"
                },
                "Tags" : [
                {
                  "Key" : "deployer-app",
                  "Value" : { "Ref" : "DeployerApp" } ,
                  "PropagateAtLaunch" : true
                },
                {
                  "Key" : "create_user",
                  "Value" : { "Ref" : "CreateUser" } ,
                  "PropagateAtLaunch" : true
                },
                {
                  "Key" : "org",
                  "Value" : { "Ref" : "Org" } ,
                  "PropagateAtLaunch" : true
                }
                ],
                "VPCZoneIdentifier": {
                    "Ref": "Subnets"
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT35M",
                    "Count": "1"
                }
            },
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MinInstancesInService": "1",
                    "MaxBatchSize": "1",
                    "PauseTime": "PT35M",
                    "WaitOnResourceSignals": "true"
                }
            }
        },
        "CassandraLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "full_install": [
                            "install_cfn",
                            "setup_disk"
                        ]
                    },
                    "install_cfn": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.CassandraLaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/usr/local/bin/cfn-init -v ",
                                            "         --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource CassandraLaunchConfig ",
                                            "         --configsets full_install ",
                                            "         --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "runas=root\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "setup_disk": {
                        "commands": {
                            "01_add_node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash -xe\n",
                                            "mkfs -t ext4 /dev/xvdf \n",
                                            "mkdir -p /data/cassandra \n",
                                            "mount /dev/xvdf /data/cassandra \n",
                                            "mkdir /data/cassandra/data \n",
                                            "mkdir /data/cassandra/commitlog \n",
                                            "mkdir /data/cassandra/saved_caches \n",
                                            "useradd cassandra \n",
                                            "chown -R cassandra:cassandra /data/cassandra \n",
                                            "cp /etc/fstab /etc/fstab.bak \n",
                                            "echo \"/dev/xvdf       /data/cassandra   ext4    defaults,nofail        0       2\" >> /etc/fstab \n"
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "US1604HVM"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "DSESecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdf",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "VolumeSize": {
                                "Ref": "VolumeSize"
                            }
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "apt-get update\n",
                                "apt-get -y install python python-setuptools python-pip\n",
                                "n=1 \n",
                                "until [ $n -ge 8 ] \n",
                                "do \n",
                                "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz && break \n",
                                "echo \"pip install cfn-bootstrap try $n failed, retry...\" \n",
                                "n=$[$n+1] \n",
                                "done \n",
                                "ln -s /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup \n",
                                "chmod 775 /usr/local/init/ubuntu/cfn-hup \n",
                                "update-rc.d cfn-hup defaults \n",
                                "/usr/local/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "         --resource CassandraLaunchConfig ",
                                "         --configsets full_install ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "/usr/local/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "         --resource CassandraGroup ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT35M"
                }
            }
        },
        "DSESecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP(S), SSH access, and DSE ports",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": {
                            "Ref": "SecurityCIDR"
                        }
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "8",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "SecurityCIDR"
                        }
                    }
                ]
            }
        }
    }
}
